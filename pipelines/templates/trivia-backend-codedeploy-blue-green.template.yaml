AWSTemplateFormatVersion: 2010-09-09

Description: Continuous deployment for ECS service when using CodeDeploy blue-green deployments

Resources:
  CodeBuildProject:
    Properties:
      Artifacts:
        Location: !Ref 'ArtifactsBucket'
        Name: 'build-output.zip'
        NamespaceType: BUILD_ID
        Packaging: ZIP
        Path: 'codebuild'
        Type: S3
      Description: !Join
        - ''
        - - 'CodeBuild Project for '
          - !Ref 'AWS::StackName'
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/nodejs:10.1.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
      Name: reinvent-trivia-game-trivia-backend-build
      ServiceRole: !Ref 'CodeBuildRole'
      Source:
        Type: GITHUB
        Location: https://github.com/aws-samples/aws-reinvent-2018-trivia-game.git
        BuildSpec: 'trivia-backend/infra/codedeploy-blue-green/buildspec.yml'
        ReportBuildStatus: true
    Type: AWS::CodeBuild::Project

  ReleasePipeline:
    DependsOn:
    - CodePipelineTrustRole
    - ArtifactsBucket
    - CodeBuildProject
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactsBucket'
        Type: S3
      Name: reinvent-trivia-game-trivia-backend-codedeploy-deploy
      RoleArn: !GetAtt
      - CodePipelineTrustRole
      - Arn
      Stages:
      - Name: Source
        Actions:
          - ActionTypeId:
              Category: Source
              Owner: ThirdParty
              Provider: GitHub
              Version: "1"
            Configuration:
              Owner: aws-samples
              Repo: aws-reinvent-2018-trivia-game
              Branch: master
              OAuthToken: "{{resolve:secretsmanager:TriviaGitHubToken:SecretString:::}}"
              PollForSourceChanges: false
            Name: GitHubSource
            OutputArtifacts:
              - Name: SourceArtifact
            RunOrder: 1
          - ActionTypeId:
              Category: Source
              Owner: AWS
              Provider: ECR
              Version: "1"
            Configuration:
              RepositoryName: reinvent-trivia-backend-base
              ImageTag: release
            Name: BaseImage
            OutputArtifacts:
              - Name: BaseImage
            RunOrder: 1
      - Name: Build
        Actions:
          - ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: "1"
            Configuration:
              ProjectName: !Ref CodeBuildProject
              PrimarySource: SourceArtifact
            InputArtifacts:
              - Name: SourceArtifact
              - Name: BaseImage
            Name: CodeBuild
            OutputArtifacts:
              - Name: BuildArtifact
              - Name: ImageDetails
            RunOrder: 1
      - Name: Test
        Actions:
        - ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CodeDeployToECS
            Version: 1
          Configuration:
            ApplicationName: AppECS-default-trivia-backend-test
            DeploymentGroupName: DgpECS-default-trivia-backend-test
            AppSpecTemplateArtifact: BuildArtifact
            AppSpecTemplatePath: appspec-test.json
            TaskDefinitionTemplateArtifact: BuildArtifact
            TaskDefinitionTemplatePath: task-definition-test.json
            Image1ArtifactName: ImageDetails
            Image1ContainerName: PLACEHOLDER
          InputArtifacts:
          - Name: BuildArtifact
          - Name: ImageDetails
          Name: Deploy
          RunOrder: 1
      - Name: Prod
        Actions:
        - ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CodeDeployToECS
            Version: 1
          Configuration:
            ApplicationName: AppECS-default-trivia-backend-prod
            DeploymentGroupName: DgpECS-default-trivia-backend-prod
            AppSpecTemplateArtifact: BuildArtifact
            AppSpecTemplatePath: appspec-prod.json
            TaskDefinitionTemplateArtifact: BuildArtifact
            TaskDefinitionTemplatePath: task-definition-prod.json
            Image1ArtifactName: ImageDetails
            Image1ContainerName: PLACEHOLDER
          InputArtifacts:
          - Name: BuildArtifact
          - Name: ImageDetails
          Name: Deploy
          RunOrder: 1
    Type: AWS::CodePipeline::Pipeline

  ReleasePipelineGitHubSourceWebhook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: "{{resolve:secretsmanager:TriviaGitHubToken:SecretString:::}}"
      Filters:
        - JsonPath: $.ref
          MatchEquals: refs/heads/{Branch}
      TargetAction: GitHubSource
      TargetPipeline:
        Ref: ReleasePipeline
      TargetPipelineVersion: 1
      RegisterWithThirdParty: true

  BaseImageSourceEvent:
    Properties:
      Description: Rule for Amazon CloudWatch Events to detect changes to the ECR repository and trigger pipeline execution
      EventPattern:
        source:
          - aws.ecr
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          requestParameters:
            repositoryName:
              - reinvent-trivia-backend-base
            imageTag:
              - release
          eventName:
            - PutImage
      State: ENABLED
      Targets:
      - Arn: !Join
        - ':'
        - - arn
          - aws
          - codepipeline
          - !Ref 'AWS::Region'
          - !Ref 'AWS::AccountId'
          - !Ref ReleasePipeline
        Id: ProjectPipelineTarget
        RoleArn: !GetAtt 'BaseImageSourceEventRole.Arn'
    Type: AWS::Events::Rule

  ArtifactsBucket:
    DeletionPolicy: Delete
    Description: Creating Amazon S3 bucket for AWS CodePipeline and CodeBuild artifacts
    Properties:
      Tags:
      - Key: Name
        Value: !Join
        - '-'
        - - !Ref 'AWS::StackName'
          - ArtifactsBucket
      VersioningConfiguration:
        Status: Enabled
    Type: AWS::S3::Bucket

  CodeBuildRole:
    Description: Creating service role in IAM for AWS CodeBuild
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyDocument:
            Statement:
            - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              Effect: Allow
              Resource: '*'
            - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
              Effect: Allow
              Resource:
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref 'ArtifactsBucket'
              - !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref 'ArtifactsBucket'
                  - /*
            - Action:
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              Effect: Allow
              Resource:
              - !Join
                - ':'
                - - arn:aws:kms
                  - !Ref 'AWS::Region'
                  - !Ref 'AWS::AccountId'
                  - !Join
                    - /
                    - - alias
                      - aws/s3
            - Action:
                - ecr:GetAuthorizationToken
                - ecr:BatchCheckLayerAvailability
                - ecr:GetDownloadUrlForLayer
                - ecr:GetRepositoryPolicy
                - ecr:DescribeRepositories
                - ecr:ListImages
                - ecr:DescribeImages
                - ecr:BatchGetImage
                - ecr:InitiateLayerUpload
                - ecr:UploadLayerPart
                - ecr:CompleteLayerUpload
                - ecr:PutImage
              Effect: Allow
              Resource: "*"
            - Action:
              - cloudformation:DescribeStackResources
              Effect: Allow
              Resource:
              - !Join
                - ':'
                - - arn:aws:cloudformation
                  - !Ref 'AWS::Region'
                  - !Ref 'AWS::AccountId'
                  - stack/TriviaBackend*
          PolicyName: !Join
            - '-'
            -  - !Ref 'AWS::StackName'
               - CodeBuildPolicy
    Type: AWS::IAM::Role

  CodePipelineTrustRole:
    Description: Creating service role in IAM for AWS CodePipeline
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Sid: 1
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:GetObject*
            - s3:GetBucket*
            - s3:List*
            - s3:DeleteObject*
            - s3:PutObject*
            - s3:Abort*
            Effect: Allow
            Resource:
            - !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref 'ArtifactsBucket'
            - !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref 'ArtifactsBucket'
                - /*
          - Action:
            - ecr:DescribeImages
            Effect: Allow
            Resource:
            - !Join
              - ':'
              - - arn:aws:ecr
                - !Ref 'AWS::Region'
                - !Ref 'AWS::AccountId'
                - repository/reinvent-trivia-backend-base
          - Action:
            - codebuild:StartBuild
            - codebuild:BatchGetBuilds
            - codebuild:StopBuild
            Effect: Allow
            Resource:
            - !GetAtt 'CodeBuildProject.Arn'
          - Action:
            - ecs:RegisterTaskDefinition
            Effect: Allow
            Resource: '*'
          - Action:
            - iam:PassRole
            Effect: Allow
            Resource: '*'
            Condition:
              StringEquals:
                "iam:PassedToService": "ecs-tasks.amazonaws.com"
          - Action:
            - codedeploy:CreateDeployment
            - codedeploy:GetApplication
            - codedeploy:GetApplicationRevision
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:RegisterApplicationRevision
            Effect: Allow
            Resource:
            - !Join
              - ':'
              - - arn
                - aws
                - codedeploy
                - !Ref 'AWS::Region'
                - !Ref 'AWS::AccountId'
                - application
                - AppECS-default-trivia-backend-*
            - !Join
              - ':'
              - - arn
                - aws
                - codedeploy
                - !Ref 'AWS::Region'
                - !Ref 'AWS::AccountId'
                - deploymentgroup
                - AppECS-default-trivia-backend-*/DgpECS-default-trivia-backend-*
            - !Join
              - ':'
              - - arn
                - aws
                - codedeploy
                - !Ref 'AWS::Region'
                - !Ref 'AWS::AccountId'
                - deploymentconfig
                - '*'
        PolicyName: !Join
          - '-'
          - - !Ref 'AWS::StackName'
            - CodePipelineRolePolicy
    Type: AWS::IAM::Role

  BaseImageSourceEventRole:
    Description: IAM role to allow Amazon CloudWatch Events to trigger AWS CodePipeline execution
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - events.amazonaws.com
          Sid: 1
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - codepipeline:StartPipelineExecution
            Effect: Allow
            Resource:
            - !Join
              - ':'
              - - arn
                - aws
                - codepipeline
                - !Ref 'AWS::Region'
                - !Ref 'AWS::AccountId'
                - !Ref ReleasePipeline
        PolicyName: !Join
          - '-'
          - - !Ref 'AWS::StackName'
            - CloudWatchEventPolicy
    Type: AWS::IAM::Role
